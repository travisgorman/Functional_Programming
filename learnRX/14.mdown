### Implement `concatMap()`
Use `concatMap()` to retrieve `id`, `title`, and 150x200 box art `url` for every video

He're we're doing the same thing we did before, excpet with a little less code, since we've abstracted projection and flattening into one function.

```js
(function() {
  var movieLists = [
      {
        name: "Instant Queue",
        videos : [
          {
            "id": 70111470,
            "title": "Die Hard",
            "boxarts": [
              { width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg" },
              { width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/DieHard200.jpg" }
            ],
            "url": "http://api.netflix.com/catalog/titles/movies/70111470",
            "rating": 4.0,
            "bookmark": []
          },
          {
            "id": 654356453,
            "title": "Bad Boys",
            "boxarts": [
              { width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/BadBoys200.jpg" },
              { width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg" }

            ],
            "url": "http://api.netflix.com/catalog/titles/movies/70111470",
            "rating": 5.0,
            "bookmark": [{ id:432534, time:65876586 }]
          }
        ]
      },
      {
        name: "New Releases",
        videos: [
          {
            "id": 65432445,
            "title": "The Chamber",
            "boxarts": [
              { width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg" },
              { width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/TheChamber200.jpg" }
            ],
            "url": "http://api.netflix.com/catalog/titles/movies/70111470",
            "rating": 4.0,
            "bookmark": []
          },
          {
            "id": 675465,
            "title": "Fracture",
            "boxarts": [
              { width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg" },
              { width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg" },
              { width: 300, height:200, url:"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg" }
            ],
            "url": "http://api.netflix.com/catalog/titles/movies/70111470",
            "rating": 5.0,
            "bookmark": [{ id:432534, time:65876586 }]
          }
        ]
      }
    ];
  return movieLists.
    concatMap(movieList =>
      movieList.videos.concatMap( video =>
        video.boxarts. filter( boxart =>
          boxart.width === 150 && boxart.height === 200).map( boxart => 
            ({
              id:video.id,
              title:video.title,
              boxart:boxart.url
            }) 
    ) ) );
})();
```
Let's have a look at that. I think this is the tastiest bit of code so far. 
## Break it Down

* Call `map()` on the `movieLists` array, mapping over each `list`
* Then call `map()` over the `videos` array, mapping over each `video`
* This time we flatten as we go
  - `concatMap()` each `list`
  - `concatMap()` each `video`
  - `filter()` to find the right boxart `url`
  - `map()` to project the `title`, `id` and `url` into an array

```js
return movieLists.
    concatMap(movieList =>
      movieList.videos.concatMap( video =>
        video.boxarts. filter( boxart =>
          boxart.width === 150 && boxart.height === 200).map( boxart => 
            ({
              id:video.id,
              title:video.title,
              boxart:boxart.url
            }) 
    ) ) );
```
Nice. And as expected, this returns a one dimensional array with just what we want. 
>```js
[ { 
      boxart: "http://cdn-0.nflximg.com/images/2891/DieHard150.jpg"
      id: 70111470
      title: "Die Hard" 
    }, 
  { 
      boxart: "http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg"
      id: 654356453
      title: "Bad Boys" 
    },
  { 
      boxart: "http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg"
      id: 65432445
      title: "The Chamber" 
    },
  { 
      boxart: "http://cdn-0.nflximg.com/images/2891/Fracture150.jpg"
      id: 675465
      title: "Fracture" 
    }
]
```

